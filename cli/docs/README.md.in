
# eosio-keygen (cli)

Generate public and private keypair for [EOSIO](https://eos.io/)

## Synopsis

```shell
@PROJECT_NAME@ [-h|--help]

@PROJECT_NAME@ [-v]

@PROJECT_NAME@ search [-m] [--l33t] [--threads=<num>] [--dict=<file1> ...]  [--lang=<value> ...]  word_list [count]

@PROJECT_NAME@ benchmark [num_keys]
```

## Description

Output one EOSIO key pair if no arguments are given.
Options and subcommands are as follows:

### General flags

| syntax          | Description      |
| --------------- | ---------------- |
| -h, --help      | Shows help text. |
| -v              | Shows version    |


### search command

`eosio-keygen search [-m] [--l33t] [--threads=<num>] [--dict=<file1> ...]  [--lang=<value> ...]  word_list [count]`

performs a search, finding `count` public keys containing one or more words from `word_list` (separated with ',').

Instead of a list it is possible to specify a file with words (separated with newline '\n') using `file:/path/to/file`

#### Search specific options

#### -m

Monochrome, disables all color output.

#### --leet

Takes each word in `word_list` and find all l33tspeak combinations of that word and uses the new list for the search.

#### --threads=num

Use `num` of parallel threads for searching. Default is what the operating system recommends.

#### --dict=file
Use words found in `file` (separated by newline) to highlight words in the keys
found (note that the words in this file are not used for search. only for highlight output).

There can be more then one `--dict` flag. In that case contents of all files are merged into one dictionary.

#### --lang=value

Same as `--dict` but will use `value` to find a file in `@CMAKE_INSTALL_FULL_DATADIR@/@CMAKE_PROJECT_NAME@/dict`.
There can be more then one `--lang` flag. In that case contents of all files are merged into one dictionary.

#### count

Number of keys to search for (default is 10)


### benchmark command

`eosio-keygen benchmark [num_keys]`

performs a benchmark test, generating `num_keys` keys and measuring the time.

#### Benchmark specific options:

#### num_keys

Number of keys to search for (default is 10)


## Security notice

Keys are generated by `OpenSSL`'s `EC_KEY_generate_key` function. The program will
never expose your keys to anything but the computers memory and output of the
program. You are free to inspect the source code and compile yourself to verify.

However, use this at your own risk. we cannot guarantee that the keys are
cryptographically secure as this depends on OpenSSL's implementation (alto it is
widely used and should be safe)

Please read the `LICENSE` file.

```
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```

## Author

Henrik Hautakoski - [henrik@eossweden.org](mailto:henrik@eossweden.org)
