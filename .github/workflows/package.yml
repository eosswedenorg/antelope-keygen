name: Package

on:
  release:
    types: [ created ]

jobs:
  # Debian package for ubuntu.
  ubuntu:
    strategy:
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04 ]
    name: ${{matrix.os}}
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v1

      - name: Package
        id: package
        run: |
            ./build.sh -t Release --pkg-type deb
            FILE=$(ls build/*.deb | head -1)
            echo "::set-output name=filename::$FILE"
            echo "::set-output name=name::$(basename $FILE)"

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_path: ${{ steps.package.outputs.filename }}
          asset_content_type: application/x-deb

  # Windows zip file
  windows:
    strategy:
      matrix:
        arch: [ x86, x64 ]
    name: Windows (${{matrix.arch}})
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Configure
        run: |
          if ("${{matrix.arch}}" -eq "x86") {
              $PLATFORM="Win32"
          } else {
              $PLATFORM="${{matrix.arch}}"
          }
          cmake -A $PLATFORM -D OPENSSL_ROOT_DIR="$pwd/build/openssl-1.1/${{matrix.arch}}" -S . -B build

      - name: Build
        run: cmake --build build --config Release

      - name: Package
        id: package
        run: |
          cmake --build build --config Release --target package
          $FILE=(ls build/eosio-keygen*.zip)
          echo "::set-output name=filename::$FILE"
          echo "::set-output name=name::$(([io.fileinfo]"$FILE").basename).zip"

      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.package.outputs.name }}
          asset_path: ${{ steps.package.outputs.filename }}
          asset_content_type: application/zip
